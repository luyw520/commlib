apply plugin: 'com.android.library'
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
//apply plugin: "com.vanniktech.maven.publish"
apply from:project.file("publish.gradle")
android {
    compileSdkVersion 33
 //   buildToolsVersion project.buildToolsVersion
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs+=["-Xjvm-default=all"]
    }
    buildFeatures {
        dataBinding true
    }
}
def lifecycle_version = "2.5.0-alpha05"
def core_ktx = "1.8.0"
def appcompat = "1.5.1"
def material = "1.5.0"
def constraint_layout = "2.1.4"
def coroutines_core = "1.5.0"
def fragment_ktx = "1.4.1"
def activity_ktx = "1.4.0"

def paging = "2.1.0"
def work = "2.1.0"

def navigation_fragment_ktx = "2.3.5"
def navigation_ui_ktx = "2.3.5"

def arouter_api = "1.5.2"
def arouter_compiler = "1.2.2"
def mmkv = "1.2.11"
def glide = "4.14.2"
def glide_compiler = "4.14.2"

//retrofit
def retrofit = "2.9.0"
def retrofit_rxjava = "2.3.0"
def okhttp_logging_interceptor = "4.3.0"

def gson = "2.10.1"
def permissionx = "1.1.1"

dependencies {
    
    //----------google
    
    api "androidx.core:core-ktx:${core_ktx}"
    api "androidx.appcompat:appcompat:$appcompat"
    api "com.google.android.material:material:${material}"
   
    api "androidx.constraintlayout:constraintlayout:${constraint_layout}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutines_core}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    api('androidx.datastore:datastore-preferences:1.0.0')
    
    // -------lifecycle-------
    api("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    api("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    api("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
    api("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")

    // Annotation processor
    kapt("androidx.lifecycle:lifecycle-compiler:$lifecycle_version")
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    api("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")
    // optional - helpers for implementing LifecycleOwner in a Service
    api("androidx.lifecycle:lifecycle-service:$lifecycle_version")

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    api("androidx.lifecycle:lifecycle-process:$lifecycle_version")
    // optional - ReactiveStreams support for LiveData
    api("androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version")

    api "androidx.fragment:fragment-ktx:${fragment_ktx}"
    api "androidx.activity:activity-ktx:${activity_ktx}"
    
    
    api "com.alibaba:arouter-api:${arouter_api}"
    kapt "com.alibaba:arouter-compiler:${arouter_compiler}"
    
    api "com.tencent:mmkv-static:${mmkv}"
    
    api "com.permissionx.guolindev:permissionx:${permissionx}"
    
    api "com.github.bumptech.glide:glide:${glide}"
    kapt "com.github.bumptech.glide:compiler:${glide}"

    api "com.squareup.retrofit2:retrofit:${retrofit}"
    api "com.squareup.retrofit2:converter-gson:${retrofit}"
    api "com.squareup.retrofit2:adapter-rxjava:${retrofit_rxjava}"
    api "com.squareup.okhttp3:logging-interceptor:${okhttp_logging_interceptor}"

    api 'org.greenrobot:eventbus:3.3.1'
    
    //ui 
    api "com.github.chenBingX:SuperTextView:v3.2.5"
    api "com.imuxuan:floatingview:1.6"
    api "com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.11"
   
    //util
    api 'com.blankj:utilcodex:1.30.6'
    api "com.google.code.gson:gson:${gson}"
}
